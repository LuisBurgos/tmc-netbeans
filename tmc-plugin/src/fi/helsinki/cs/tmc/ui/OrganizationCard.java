package fi.helsinki.cs.tmc.ui;

import fi.helsinki.cs.tmc.core.domain.Organization;
import fi.helsinki.cs.tmc.core.holders.TmcSettingsHolder;
import java.awt.Color;

import java.net.MalformedURLException;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.text.DefaultCaret;

public class OrganizationCard extends javax.swing.JPanel {
    
    public OrganizationCard(Organization organization) {
        initComponents();
        
        DefaultCaret caret = (DefaultCaret)this.organizationInformation.getCaret();
        caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
        
        this.organizationName.setText(organization.getName());
        String information = organization.getInformation();
        if (information.length() > 75) {
            information = information.substring(0, 74) + "...";
        }
        this.organizationInformation.setText(information);
        this.organizationSlug.setText("/" + organization.getSlug());
        ImageIcon image = new ImageIcon(getClass().getResource("placeholderLogo.png"));
        if (!organization.getLogoPath().contains("missing")) {
            image = new ImageIcon(logoUrl(organization.getLogoPath()));
        }
        image.setImage(image.getImage().getScaledInstance(49, 49, java.awt.Image.SCALE_SMOOTH));
        this.logo.setIcon(image);
    }
    
    public String getOrganizationName() {
        return this.organizationName.getText();
    }
    
    private URL logoUrl(String path) {
        final String address = TmcSettingsHolder.get().getServerAddress();
        String url;
        if (address.charAt(address.length()-1) == '/' && path.charAt(0) == '/') {
            url = address.substring(0, address.length() - 1) + path;
        } else {
            url = address + path;
        }
        try {
            return new URL(url);
        } catch (MalformedURLException ex) {
            return null;
        }
    }
    
    public void setColors(Color foreground, Color background) {
        this.setBackground(background);
        this.organizationName.setForeground(foreground);
        this.organizationSlug.setForeground(foreground);
        this.infoScrollPane.setBackground(background);
        this.organizationInformation.setForeground(foreground);
        this.organizationInformation.setBackground(background);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logo = new javax.swing.JLabel();
        organizationName = new javax.swing.JLabel();
        organizationSlug = new javax.swing.JLabel();
        infoScrollPane = new javax.swing.JScrollPane();
        organizationInformation = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(5, 10, 5, 10, new java.awt.Color(242, 241, 240)));
        setMaximumSize(new java.awt.Dimension(332, 73));
        setMinimumSize(new java.awt.Dimension(332, 73));

        org.openide.awt.Mnemonics.setLocalizedText(logo, org.openide.util.NbBundle.getMessage(OrganizationCard.class, "OrganizationCard.logo.text")); // NOI18N
        logo.setMaximumSize(new java.awt.Dimension(49, 49));
        logo.setMinimumSize(new java.awt.Dimension(49, 49));
        logo.setPreferredSize(new java.awt.Dimension(49, 49));

        organizationName.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(organizationName, org.openide.util.NbBundle.getMessage(OrganizationCard.class, "OrganizationCard.organizationName.text")); // NOI18N

        organizationSlug.setForeground(new java.awt.Color(150, 150, 150));
        org.openide.awt.Mnemonics.setLocalizedText(organizationSlug, org.openide.util.NbBundle.getMessage(OrganizationCard.class, "OrganizationCard.organizationSlug.text")); // NOI18N

        infoScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        infoScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        infoScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        infoScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        infoScrollPane.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        infoScrollPane.setHorizontalScrollBar(null);
        infoScrollPane.setPreferredSize(new java.awt.Dimension(106, 30));

        organizationInformation.setEditable(false);
        organizationInformation.setBackground(new java.awt.Color(255, 255, 255));
        organizationInformation.setLineWrap(true);
        organizationInformation.setText(org.openide.util.NbBundle.getMessage(OrganizationCard.class, "OrganizationCard.organizationInformation.text")); // NOI18N
        organizationInformation.setWrapStyleWord(true);
        organizationInformation.setAutoscrolls(false);
        organizationInformation.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        organizationInformation.setMaximumSize(null);
        infoScrollPane.setViewportView(organizationInformation);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(organizationName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(organizationSlug))
                    .addComponent(infoScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(organizationSlug)
                            .addComponent(organizationName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(infoScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane infoScrollPane;
    private javax.swing.JLabel logo;
    private javax.swing.JTextArea organizationInformation;
    private javax.swing.JLabel organizationName;
    private javax.swing.JLabel organizationSlug;
    // End of variables declaration//GEN-END:variables
}
